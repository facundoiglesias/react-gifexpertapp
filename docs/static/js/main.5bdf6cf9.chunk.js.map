{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","ReactDOM","render","document","getElementById"],"mappings":"mMA4CeA,EAzCK,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAoBA,OACI,mCACI,sBAAMC,SAbO,SAACC,GAElBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAoBO,OAC7CN,EAAc,OAMd,SAEI,uBACQO,KAAO,OACPC,MAAUT,EACVU,SAzBM,SAACP,GACvBF,EACIE,EAAEQ,OAAOF,e,+BCPNG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEfC,EAFe,0FAE2EC,UAAUH,GAFrF,sBAGFI,MAAOF,GAHL,cAGfG,EAHe,gBAIEA,EAAKC,OAJP,uBAIbC,EAJa,EAIbA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVrB,kBAcdM,GAdc,4CAAH,sDCATO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAKlC,OACI,sBAAKc,UAAU,wDAAf,UACE,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAKA,QCLFO,EAAU,SAAC,GAAoB,IAAjBnB,EAAgB,EAAhBA,SAEvB,ECHwB,SAAEA,GAE1B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAZAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAAEpB,IAEEqB,EDjB0BK,CAAc1B,GAAlCa,EAAb,EAAQN,KAAaa,EAArB,EAAqBA,QAErB,OACI,qCACI,qBAAIJ,UAAU,yCAAd,cAA2DhB,EAA3D,OAEEoB,GAAW,mBAAGJ,UAAU,wCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACP,cAAC,EAAD,eAEKA,GADCA,EAAIC,aEcvBgB,EA7BM,SAAAC,GAEjB,MAAoC1C,mBAAS,CAAC,SAA9C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAEA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAiBA,IAC9B,uBAEA,6BAEQS,EAAWe,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAYA,GADJA,Y,MCbpC6B,IAASC,OAAO,cAAC,EAAD,IAAkBC,SAASC,eAAe,W","file":"static/js/main.5bdf6cf9.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( { setCategories } ) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(\r\n            e.target.value\r\n        )\r\n\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n        \r\n        if(inputValue.trim().length > 2) \r\n        {\r\n            setCategories( categories => [inputValue, ...categories] );\r\n            setinputValue(\" \");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit = { handleSubmit }>\r\n        \r\n                <input \r\n                        type = \"text\"\r\n                        value = { inputValue }\r\n                        onChange = { handleInputChange }\r\n                />  \r\n          </form>\r\n       \r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory\r\n","\r\n\r\n  export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=75I7ZTbu5ZTseAhjAYs5jyE875t9yvYr&q=${ encodeURI(category) }&limit=10`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}\r\n   ","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url } ) => {\r\n    \r\n    \r\n    \r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce animate__swing\">\r\n          <img src={ url } alt={ title } />\r\n          <p>{ title }</p>  \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__backInRight\" > { category } </h3>  \r\n \r\n            { loading && <p className=\"animate_animated animate__backOutLeft\" >Loading</p> }\r\n\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map( img => (\r\n                            <GifGridItem \r\n                            key= {img.id}\r\n                            { ...img } \r\n                        />\r\n                    ))\r\n                }\r\n            </div> \r\n\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    \r\n    useEffect( () => {\r\n        \r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [ category ])    \r\n\r\n    return state; // {data: [], loading: true}\r\n\r\n}\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n    \r\n    const [categories, setCategories] = useState([\"cats\"])\r\n        \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories  } />\r\n            <hr/>\r\n       \r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category= { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n\n"],"sourceRoot":""}